{
    "version": "0.1",
    "pageContent": 
	{
        "_comments": "object that contains data for page labels, buttons, etc.",
        "navItems": 
		{
            "_common": 
			{
                "buttonBackToGallery": 
				{
                    "name": "Back To Gallery",
					"method": "backToGallery()",
					"idName": "backToGallery"	
                },
                "buttonStartTutorial": 
				{
                    "name": "Start Tutorial",
					"method": "startTutorialFromDetailsScreen()",
					"idName": "startTutorial"
                },
				"buttonViewDetails": 
				{
                    "name": "View Details",
					"method": "viewDetails()",
					"idName": "stepsViewDetails"	
                }
            }
        }
    },
    "tutorial": 
	{
        "_common": 
		{	
	    "name": "Using a Tree Transform node to explore context trees",
            "shortDescription": "Learn how to use the Tree Transform node whilst investigating how context trees aid usability.",
            "durationText": "This tutorial takes approximately",
            "durationTime": "20 minutes",
            "_resourceToOpenComment": "The ID of the first resource to open when the user imports the tutorial. Resource IDs are defined in the repo_metadata.json Tutorials listing on ot4i.",
            "resourceToOpen": "MainFlow",
            "helpLink": 
			{
                "text": "IBM Documentation",
           		"link": "https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/acesw_home.html"
            }
        },
        "pageDetails": 
		{
            "topicsName": "Tutorial topics",
            "_topicListComment": "A short list of product concepts or tasks demonstrated by this tutorial",
            "topicList": 
			[
                {
                    "title": "Tree Transform message flow node"
                },
                {
                    "title": "Jira Request message flow node"
                },
                {
                    "title": "The traditional logical message tree and the new ACE 13 in-memory context tree"
                }
            ],
            "outcomesName": "Learning outcomes",
            "_outcomesComment": "A description of what the user will have learned or accomplished by running this tutorial.",
            "outcomeList": 
			[
                {
                    "title": "Learn about how to easily transform between XML and JSON"
                },
                {
                    "title": "In the Toolkit learn how to automatically exploit JSON schemas when doing mapping tasks with the Discovery connector nodes."
		}
            ],
            "summary": 
			{
                "overviewName": "OVERVIEW",
                "_overviewComment": "A short description of what happens in this tutorial, and an optional short explanation of the ACE concepts used in this tutorial if necessary for context. What background knowledge must the user have for this to make sense?",
                "sections": 
				[
                    {
                        "section": "This tutorial provides a basic message flow that uses very simple XML and JSON messages to help explain the concept of how the ACE in memory logical message tree works. The message flow, which is driven using HTTP data, is initially used to transform between XML and JSON using the new Tree Transform node. The flow is then extended in a variety of ways to use the new Context tree which is shown using a Trace node."
                    },
		    {
                        "section": "In the later stages of the tutorial a Jira Request node is added which demonstrates how Context trees can help with mapping tasks. Finally a Compute node is inserted into the message flow and the new ESQL content-assist feature is used to map from a new Context tree back into a traditional logical message tree."
		    }
                ]
            },
			"helpLinks": 
			{
				"_helpLinksComment": "Helplinks that have a type:web attribute are rendered as web links. Otherwise, links are assumed to be to embedded Help topics in the Knowledge Center.",
				"title": "Find out more",
				"details": 
				[
					{
						"title": "IBM Documentation link to ",
						"description": "Developing integration solutions by using applications",
						"link": "https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/bi12002_.htm",
						"type": "web"
					}
				]
			}
        },
        "pageSteps": 
		{
            "create": 
			{
                "overview": 
				{
                    "name": "Create",
                    "heading": "Import projects",
                    "_createComment": "A description of what will happen when the user clicks Import.",
                    "sections": 
					[
                        {
                            "section": "When you click the Import button, a project will be created in your workspace: An application named <span class='application'>TreeTransformApplication</span>."
                        },
                        {
                            "section": "<span class='application'>TreeTransformApplication</span> provides three separate message flows named <span class='application'>TreeTransformValidateJSON</span>, <span class='applicatoin'>TreeTransformValidateXML</span> and <span class='application'>TreeTransform</span>. Each message flow receives data over HTTP and listens on a separate URL so you can deploy them all at the same time without risk of interference. The tutorial begins by demonstrating two very simple message model formats: one in XML and one in JSON. An XML schema is provided which describes the XML structure. A JSON schema is provided which describes the JSON structure."
			},
			{
				"section": "The message flow named <span class='application'>TreeTransformValidateXML</span> demonstrates both valid and invalid data being successfully validated using the provided XML schema."
			},
			{
				"section": "The message flow named <span class='application'>TreeTransformValidateJSON</span> demonstrates both valid and invalid data being successfully validated using the provided JSON schema."				},
			{
	    			"section": "Having established these core principles, the message flow named <span class='application'>TreeTransform</span> demonstrates the new TreeTransform node and its ability to easily transform an XML input message into a JSON output message."
	},
	{	    			"section": "Next the tutorial describes adding a Jira Request node into the message flow. In previous versions of the ACE product, the Discovery Connector nodes have needed configuration to inform them about the JSON structures created by earlier preceding nodes in the message flow. The TreeTransform node is used to construct a new Context tree. Context trees are helpful in simplifying message flow development when using Discovery Connector nodes."
						},
{	    			"section": "The final section of the lab further enhances the message flow by placing a Compute node after the Jira Request node and demonstrates the new ESQL Content Assist facility to take values from the Context tree and map them back in to a traditional message assembly."
						}

                    ]
                },
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[
                        {
                            "title": "IBM Documentation link to ",
                            "description": "Developing integration solutions by using applications",
                            "link": "https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/bi12002_.htm",
							"type": "web"
                        }
                    ]
                },
                "actions": 
				{
                    "title": "Create Actions",
                    "details": 
					[
                        {
                            "name": "Import",
                            "method": "importArtifacts()"
                        }
                    ]
                }
            },
            "prepare": 
			{
                "overview": 
				{
                    "name": "Prepare",
                    "heading": "Create a local integration server",
                    "_prepareComment": "A description of what just happened when the user clicked Import, and what will happen when the user clicks Deploy.",
                    "sections": 
		     [
			  {
              "section":"Prepare your Toolkit environment for the tutorial by executing the following steps:",				
                "steps":
                {
                "type":"ordered",
                "details":
                  [                    					
					{ 
					                      "details": "From the Integration Explorer view in the bottom left corner of the Toolkit, right-click the Integration Servers folder and select the option to <span class='uicontrol'>Create a local integration server</span>."
					},
					{			
								"details": "Select the option to <span class='uicontrol'>Access an external directory vault</span>. This will enable the External directory vault location, which by default will specify <span class='uicontrol'>TEST_EXT_DIR_VAULT</span>. Stay with this selection, as it will conveniently result in a project in your Toolkit workspace which we will use later in the tutorial to store some credentials when connecting to Jira."
					},
					{
								"details": "Specify an External directory vault key. This key is used to secure the vault so it needs to be a password which you can remember."
					},
					{
								"details": "Click the Create vault button. You will notice the vault will be created and the text on the button will change to read <span class='uicontrol'>Test access</span>. Click the button to test out access if you wish! Click the Finish button to finish creating the local integration server."
					},
					{
								"details": "In the Integration Explorer view in the bottom left corner, you should now see <span class='uicontrol'>TEST_SERVER</span> in the Integration Servers folder and <span class='uicontrol'>TEST_EXT_DIR_VAULT</span> should be shown in the External Directory Vaults folder."
					}
                  ]
                }
              }
             ]
                },
                "helpLinks": 
				{
                }
            },
            "run": 
			{
                "overview": 
				{
                    "name": "Run",
                    "heading": "",
                    "_runComment": "The full steps for the user to run through the tutorial. Use 'sections' to render paragraphs, 'steps' with a type of 'ordered' or 'unordered' to render HTML lists, and 'substeps' to render nested lists.",
                "sections":[                            
                            {                                
                                "steps": {
                                    "type": "ordered",
                                    "details": [                                      
                                    {
                                        "details": "Familiarize yourself with the provided XML data structure. Open <span class='application'>TreeTransformValidateXML.msgflow</span>.",
                                        "substeps":{
                                        "type": "unordered",
                                        "details": [
                                        {
                                          "details": "Click the Flow Exerciser icon <img src='http://ot4i.github.io/ot4i.tutorials//dist/images/icons/iib/startFlowExerciser.png' alt='' /> to start testing the flow (agree to the question about deploying the flow)."
                                        },   
										{
                                            "details": "Click the Send Message icon <img src='http://ot4i.github.io/ot4i.tutorials/dist/images/icons/iib/sendMessage.png' alt='' />. Two saved messages are provided."
                                        },
                                        {
                                            "details": "The input message <span class='resource'>Valid XML</span> contains this data:<br><code>&lt;Problem&gt;<br>&lt;Description&gt;This is a short summary description&lt;/Description&gt;<br>&lt;/Problem&gt;</code><br>This XML message matches with the XML message model which is provided in the file ModelXML.xsd inside the application TreeTransformApplication. Select this input message and click Send and the message will be sent to the HTTPInput node. You will receive the same data echoed back to you as a reply."
										},
										{
											"details": "The input message <span class='resource'>Invalid XML</span> contains this data:<br><code>&lt;ThisFieldIsNotInTheSchema&gt;<br>&lt;Description&gt;This is a short summary description&lt;/Description&gt;<br>&lt;/ThisFieldIsNotInTheSchema&gt;<br>This XML message does not match with the XML message model which is provided in the file ModelXML.xsd inside the application TreeTransformApplication because the root tag name is incorrect. Select this input message and click Send and the message will be sent to the HTTPInput node. You will receive a reply message telling you that validation failed."
										}
										]
										}
									},
									{
                                        "details": "Familiarize yourself with the provided JSON data structure. Open <span class='application'>TreeTransformValidateJSON.msgflow</span>.",
                                        "substeps":{
                                        "type": "unordered",
                                        "details": [
                                        {
                                          "details": "Click the Flow Exerciser icon <img src='http://ot4i.github.io/ot4i.tutorials//dist/images/icons/iib/startFlowExerciser.png' alt='' /> to start testing the flow (agree to the question about deploying the flow)."
                                        },   
										{
                                            "details": "Click the Send Message icon <img src='http://ot4i.github.io/ot4i.tutorials/dist/images/icons/iib/sendMessage.png' alt='' />. Two saved messages are provided."
                                        },
                                        {
                                            "details": "The input message <span class='resource'>Valid JSON</span> contains this data:<br>{<br>\"Problem\": {<br>\"Description\":\"This is a short summary description\"<br>}<br>}</code><br>This JSON message matches with the JSON message model which is provided in the file ModelJSON.json inside the application TreeTransformApplication. Select this input message and click Send and the message will be sent to the HTTPInput node. You will receive the same data echoed back to you as a reply."
										},
										{
											"details": "The input message <span class='resource'>Invalid JSON</span> contains this data:<br>{<br>\"ThisFieldIsNotInTheJSONSchema\": {<br>\"Description\":\"This is a short summary description\"<br>}<br>}</code><br>This JSON message matches with the JSON message model which is provided in the file ModelJSON.json inside the application TreeTransformApplication. Select this input message and click Send and the message will be sent to the HTTPInput node.  You will receive a reply message telling you that validation failed."		
										}
										]
										}
									}
									]
								}
							},
							{
								"section": "This tutorial has shown the Validate node check a message against a JSON schema."
							}
							]
                },
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[
                                                {
                            "title": "IBM Documentation link to ",
                            "description": "Testing your message flow by using the Flow exerciser",
                            "link": "https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/rt26110_.htm",
							"type": "web"
                        }
                    ]
                }
            }
        }
    }
}
